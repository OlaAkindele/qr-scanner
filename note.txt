lightgray   #f3f3f3
brand color #0a3d62



You may use http://cpanel.ogabike.com or https://cpanel-s18.registrar-servers.com, you don't need to mix them into one link.





















if (payload.post.file === undefined) {
    // !====user is not posting with image
    return new_supabase
      .from("feeds")
      .insert([
        {
          feed_id: postId,
          poster: poster,
          posterId: id,
          school: poster.school,
          data: new_payload,
          time: JSON.stringify(payload.post.time),
          privacy: setPostPrivacy,
        },
      ])
      .then((res) => {
        if (res.body === null) {
          console.log(res);
          state.draft.push(new_payload);
          disp_draft(state.draft);
          return error(
            "Your operation could not be completed due to network error. Your post has been save to draft."
          );
        } else {
          let newData = {
            ...res.body[0].data,
            likes: [],
            unlikes: [],
            comments: [],
            success: true,
          };
          state.feeds.push(newData);
          loadFeeds(state.feeds);
          console.log(res.body[0]);
          return success("Done", { success: true });
        }
      })
      .catch((error) => {
        state.draft.push(new_payload);
        disp_draft(state.draft);
        return error(
          "Your operation could not be completed due to network error. Your post has been save to draft."
        );
      });
  } else {
    // @======   user is posting with image
    // @==========  AT THIS POINT, MAKE A AXIOS CALL TO THE BACKEND TO UPLOAD THE IMAGE AND REPLACE THE URL

    // if (payload.post.file === undefined) {
    // !====user is not posting with image

    // let file = "";

    // if (payload.post.file !== undefined) {
    //   file = payload.post.file;
    // }
    // const formData = new FormData();
    // formData.append("file", file);
    // formData.append("upload_preset", "rx54xe0r");
    // formData.append("folder", "aluta-meta-feed-posts");
    // return fetch("https://api.cloudinary.com/v1_1/aluta-meta/upload", {
    //   method: "POST",
    //   body: formData,
    // })
    //   .then((res) => res.json())
    //   .then((res) => {
    //     console.log(res);
    //     let newDataToUpload = {
    //       ...payload,
    //       post: { ...payload.post, file: res, photo: res.public_id },
    //       poster,
    //       id: postId,
    //       setPostPrivacy,
    //     };
    //     return new_supabase
    //       .from("feeds")
    //       .insert([
    //         {
    //           feed_id: postId,
    //           poster: poster,
    //           school: poster.school,
    //           posterId: id,
    //           data: newDataToUpload,
    //           time: JSON.stringify(payload.post.time),
    //           privacy: setPostPrivacy,
    //         },
    //       ])
    //       .then((res) => {
    //         if (res.body === null) {
    //           console.log(res);
    //           state.draft.push(newDataToUpload);
    //           disp_draft(state.draft);
    //           return error(
    //             "Your operation could not be completed due to network error. Your post has been save to draft."
    //           );
    //         } else {
    //           let newData = {
    //             ...res.body[0].data,
    //             likes: [],
    //             unlikes: [],
    //             comments: [],
    //             success: true,
    //           };
    //           state.feeds.push(newData);
    //           loadFeeds(state.feeds);
    //           console.log(res.body[0]);
    //           return success("Done", { success: true });
    //         }
    //       });
    //   })
    //   .catch((error) => {
    //     state.draft.push(new_payload);
    //     disp_draft(state.draft);
    //     return error(
    //       "Your operation could not be completed due to network error. Your post has been save to draft."
    //     );
    //   });

    let file = "";
    let fileExt = "";
    let fileName = "";
    let filePath = "";

    if (payload.post.file !== undefined) {
      file = payload.post.file;
      fileExt = file.name.split(".").pop();
      fileName = `${Math.random()}.${fileExt}`;
      filePath = `${fileName}`;
    }

    let new_payload = { ...payload, poster, id: postId, setPostPrivacy };
    return new_supabase.storage
      .from("posts")
      .upload(filePath, file, {
        cacheControl: "3600",
        upsert: false,
      })
      .then((resAvater) => {
        if (resAvater.error === null) {
          console.log(resAvater);
          let newDataToUpload = {
            ...payload,
            post: { ...payload.post, photo: resAvater.data.Key },
            poster,
            id: postId,
            setPostPrivacy,
          };
          return new_supabase
            .from("feeds")
            .insert([
              {
                feed_id: postId,
                poster: poster,
                school: poster.school,
                posterId: id,
                data: newDataToUpload,
                time: JSON.stringify(payload.post.time),
                privacy: setPostPrivacy,
              },
            ])
            .then((res) => {
              if (res.body === null) {
                console.log(res);
                state.draft.push(newDataToUpload);
                disp_draft(state.draft);
                return error(
                  "Your operation could not be completed due to network error. Your post has been save to draft."
                );
              } else {
                let newData = {
                  ...res.body[0].data,
                  likes: [],
                  unlikes: [],
                  comments: [],
                  success: true,
                };
                state.feeds.push(newData);
                loadFeeds(state.feeds);
                console.log(res.body[0]);
                return success("Done", { success: true });
              }
            });
        } else {
        }
      })
      .catch((error) => {
        state.draft.push(new_payload);
        disp_draft(state.draft);
        return error(
          "Your operation could not be completed due to network error. Your post has been save to draft."
        );
      });
  }


  //////
  Options to verify students, graduates, and lecturers.
  